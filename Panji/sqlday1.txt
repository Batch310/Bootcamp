--DDL Buat Database
create database batch310;

--DDL Hapus Database
drop database batch310;

--DDL Buat Table
create table pegawai(
	ID_Pegawai serial primary key, 
	Umur integer,
	Nama_Pegawai text
);

--DDL Hapus Table
drop table pegawai;

--Buatlah Table KTP dengan kolom

create table KTP(
	nik integer primary key,
	nama text,
	ttl text,
	jenis_kelamin text,
	alamat text
);

--DML, tampilkan semua kolom dari table
select * from ktp;


--DDL, rename kolom tabel
alter table KTP
rename column ttl to tempat_tgl_lahir;

--DDL, ubah tipe data kolom
alter table KTP
alter column jenis_kelamin type boolean using jenis_kelamin::boolean;

--DDL, delete kolom
alter table ktp
drop column tempat_tgl_lahir;

--DDL, add kolom
alter table ktp
add column tempat_lahir text,
add column tgl_lahir date;

--DML, insert data
insert into pegawai(umur,nama_pegawai)
values(24,'Panji'),(22,'Dewa');

--DML, update data
update pegawai
set nama_pegawai = 'Nur Rohman'
where id_pegawai = 4;

update pegawai
set umur = 23, nama_pegawai = 'Bernadinus'
where id_pegawai = 1;

select * from pegawai;
--DML, delete data
delete from pegawai
where id_pegawai = 4;

--DML, select
select * from pegawai;
select * from ktp;

select nama_pegawai from pegawai;
select nama_pegawai, umur from pegawai;

--Alias nama kolom
select nama_Pegawai as pegawai, umur from pegawai;

--select order by
select * from pegawai order by id_pegawai ASC; --mengurutkan data dari kecil ke besar brdasarkan id_pegawai
select * from pegawai order by id_pegawai DESC; --mengurutkan data dari besar ke kecil 

--select distinct
select * from Pegawai;
select distinct umur from pegawai;

--select where
select * from pegawai where umur = 23 and id_pegawai = 1;

--Select where pake in
select * from pegawai where umur in (23);
select * from pegawai where umur in (23,25);

--select where pake between / diantara (khusus buat integer/numeric)
select * from pegawai where umur between 22 and 24;

--select where like / sepeerti / mengandung
select * from pegawai where nama_pegawai like '%Panji';
select * from pegawai where nama_pegawai like '%an%';

--select agregat
--Average >> menghitung rata-rata
--Sum >> menjumlahkan
--Count >> menghitung
--Min >> nilai terendah
--Max >> nilai tertinggi

--menampilkan nilai tertinggi di variabel umur
select max(umur) from pegawai; 
--menampilkan nilai terendah di variabel umur
select min(umur) from pegawai;
--menghitung nilai rata-rata di variabel umur
select avg(umur) from pegawai;
--menjumlahkan data umur
select sum(umur) from pegawai;
select count(umur) from pegawai;

--group by
select nama_pegawai,sum(umur) from pegawai group by nama_pegawai;

--Latihan Film
create table film(
    kd_film text primary key,
    nm_film text,
    pendapatan integer,
    nominasi integer
);

insert into film values
('F001','IRON MAN',2000000000,3),
('F002','IRON MAN 2',1800000000,2),
('F003','IRON MAN 3',1200000000,0),
('F004','AVENGER:CIVIL WAR',2000000000,1),
('F005','SPIDERMAN HOME COMING',1300000000,0),
('F006','THE RAID',800000000,5),
('F007','FAST & FURIOUS',830000000,2),
('F008','HABIBI DAN AINUN',670000000,4),
('F009','POLICE STORY',700000000,3),
('F010','POLICE STORY 2',710000000,1),
('F011','POLICE STORY 3',615000000,0),
('F012','RUSH HOUR',695000000,2),
('F013','KUNGFU PANDA',923000000,5);

select * from film;


--1. Tampilkan nama film dan nominasi dari nominasi yang terbasar
select nm_film as "nama film",nominasi from film order by nominasi desc;

--2. Tampilkan nama film dan pendataan dari yang terkecil
select nm_film as "nama film",pendapatan from film order by pendapatan asc;

--3. Tampilkan nama film dan nominasi yang tidak dapat nominasi
select nm_film,nominasi from film where nominasi in (0);

--4. Tampilkan nama film dan nominasi yang paling banyak mendapatkan nominasi
select nm_film,nominasi from film 
where nominasi = (select max(nominasi) from film);

--5. Tampilkan nama film dan pndapatan yang terbesar
select nm_film as "nama film",pendapatan 
from film 
where pendapatan = (select max(pendapatan) from film);

--6. Tampilkan nama film dan pendapatan yang terkecil
select nm_film as "nama film",pendapatan 
from film 
where pendapatan = (select min(pendapatan) from film);

--7. Tampilkan rata-rata pendapatan film keseluruhan
select round(avg(pendapatan)) as "Pendapatan" from film;

--8. Tampilkan rata2 nominasi film keseluruhan
select round(avg(nominasi)) as "Nominasi" from film;

--9. Tampilkan nama film yang huruf depannya 'p'
select nm_film as "nama film" from film where nm_film ilike 'P%'

--10. Tampilkan nama film yang huruf terakhirnya 's'
select nm_film as "nama film" from film where nm_film ilike '%S'

--11. Tampilkan nama film yang mengandung huruf 'd'
select nm_film as "nama film" from film where nm_film ilike '%D%'

--12. Tampilkan nama film dengan pendapatan terkecil yang mengandung huruf 'b'
select nm_film as "nama film",pendapatan from film
where 
nm_film ilike '%m%' and pendapatan = (select min(pendapatan) from film where 
nm_film ilike '%m%'); 

--13. Tampilkan nama film dengan pendapatan terbesar yang mengandung huruf 'd'
select nm_film as "nama film",pendapatan from film
where 
nm_film ilike '%d%' 
and pendapatan = (select max(pendapatan) from film where nm_film ilike '%d%');

--lower / upper
select lower('PANJI');
select upper('panji');

--Buat tabel kota
create table kota(
	id int primary key,
	nama text,
	id_provinsi int
);
insert into kota values
(1,'Jakarta',1),
(2,'Bandung',2),
(3,'Sumedang',2),
(4,'Makasar',4),
(5,'Surabaya',5),
(6,'Medan',6);

select * from kota;

--Buat tabel provinsi
create table provinsi(
	id int primary key,
	nama text
);
insert into provinsi values
(1,'DKI Jakarta'),
(2,'Jawa Barat'),
(3,'Papua Barat'),
(4,'Sulawesi Selatan'),
(5,'Jawa timur');

select * from provinsi;

--inner join
select 
	provinsi.nama as "Provinsi",
	kota.nama as "Kota"
from kota inner join provinsi
on kota.id_provinsi = provinsi.id; --on sbagai pengunci apa yang mau disambungkan

--left join
select 
	provinsi.nama as "Provinsi",
	kota.nama as "Kota"
from kota left join provinsi
on kota.id_provinsi = provinsi.id;

--right join
select 
	provinsi.nama as "Provinsi",
	kota.nama as "Kota"
from kota right join provinsi
on kota.id_provinsi = provinsi.id;

--full outer join
select 
	provinsi.nama as "Provinsi",
	kota.nama as "Kota"
from kota full outer join provinsi
on kota.id_provinsi = provinsi.id;






