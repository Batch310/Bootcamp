--DDL => Buat Database
create database batch310;

--DDL => Hapus Database
drop database batch310;

--DDL Buat table(Create)
create table PEGAWAI(
   ID_PEGAWAI integer primary key,  --Serial(auto_increment)
   UMUR integer,
   NAMA_PEGAWAI text
);

--DDL Hapus Tabel
drop table pegawai;

create table KTP(
    nik integer primary key,
	nama text,
	ttl text,
	jenis_kelamin text,
	alamat text
);

--DML, Tampilkan semua kolom dari tabel ktp
select * from ktp;

--DDL, Rename kolom tabel
alter table ktp
rename column ttl to tempat_tgl_lahir;

--DDL, Rename tipe data
alter table ktp
alter column jenis_kelamin type boolean using jenis_kelamin::boolean;

--DDL, Delete kolom
alter table ktp
drop column tempat_tgl_lahir;

--DDL, Add kolom
alter table ktp
add column tgl_lahir date;

select * from pegawai
--DML, Insert data

--Cara 1
 insert into pegawai(id_pegawai,umur,nama_pegawai)
 values(2,22,'TyAN'),
 (4,22,'Yuda');
 
--Car 2
insert into pegawai
values
(1,23,'Rika');

select * from pegawai;
--DML, Update pegawai
update pegawai
set umur = 20
where id_pegawai=1;
 
update pegawai
set umur =19, nama_pegawai = 'Aditya'
where id_pegawai=1;

select * from pegawai
--DML Delete data
delete from pegawai
where id_pegawai = 2;

--DML Select select
--select data dari kolom pilihan
select nama_pegawai from pegawai;
select nama_pegawai,umur from pegawai;

--Alias atau ubah nama kolom(sementara sat di run)
select
nama_pegawai as "Nama Pegawai",
umur
from
pegawai;

select * from pegawai
--Select order by(Mengurutkan)
select * from pegawai order by id_pegawai ASC;
select * from pegawai order by id_pegawai DESC;

--Select distinct(Hapus duplicate)
select distinct umur from pegawai;

--Select where(Tampilkan pilihan)
select * from pegawai where nama_pegawai ='Rika';
select * from pegawai where umur=22 AND id_pegawai=4;

--select where .. in (Tampil pilihan yg dipilih)
select * from pegawai where umur in(22,19); 
select * from pegawai where nama_pegawai in('Yuda','Rika');

--select where beetween(diantara)=>numeric
select * from pegawai where umur between 17 and 23;

select * from pegawai;
--select where like/ seperti/mengandung
-- (%) => mewakili kata yg tersembunyi
select * from pegawai where nama_pegawai like 'R%'; 

select * from pegawai;
--Fungsi agregat
   -- AVG => Average, hitung rata2
   -- SUM =>Penjumlahan
   -- Count => Menghitung jumlah
   -- Min => Nilai terendah
--Max => Nilai tertinggi

select max(umur) from pegawai;
select min(umur) from pegawai;

--Group by(nampilin data kalo ada fungsi agregat)
select nama_pegawai,count(umur) from pegawai group by nama_pegawai;

--Round => Pembulatan
  select round(2.3) => jadi 2
  select round(2.8) => jadi 3
  select floor(2.8) => 2 (pembulatan ke bawah)
  select floor(2.1) => 3 (pembulatan ke atas)

--Lower & Upper => mengecilkan huruf
   select lower('YUDHA'); =>yudha
   select upper('imam'); =>IMAM

--ilike => tanpa memperhatikan case sensitif
   select nm_film from film where nm_film ilike '%p%';

-- is(sama dengan) =>hanya utk null
-- note : "Kalo sudah jelas 1 data langsung eksekusi,
            kalo hasil, perlu di query"


--Latihan Film
create table film(
    kd_film text primary key,
    nm_film text,
    pendapatan integer,
    nominasi integer
);

insert into film values
('F001','IRON MAN',2000000000,3),
('F002','IRON MAN 2',1800000000,2),
('F003','IRON MAN 3',1200000000,0),
('F004','AVENGER:CIVIL WAR',2000000000,1),
('F005','SPIDERMAN HOME COMING',1300000000,0),
('F006','THE RAID',800000000,5),
('F007','FAST & FURIOUS',830000000,2),
('F008','HABIBI DAN AINUN',670000000,4),
('F009','POLICE STORY',700000000,3),
('F010','POLICE STORY 2',710000000,1),
('F011','POLICE STORY 3',615000000,0),
('F012','RUSH HOUR',695000000,2),
('F013','KUNGFU PANDA',923000000,5);

select * from film;

--1     tampil nama & nominasi dari yg terbesar
select 
nm_film as "nama film", 
nominasi 
from film 
order by nominasi DESC ;

--2    tampil nama & pendapatan dari yg terkecil
select nm_film, pendapatan 
from film 
order by pendapatan ASC;

--3
select nm_film, nominasi 
from film 
where nominasi in(0);

--4   tampilkan nama dan nominasi paling besar
select 
nm_film,nominasi 
from film 
where nominasi=(select max(nominasi)from film) ;

--5   tampilkan nama dan pendapatan paling besar
select 
nm_film, pendapatan 
from film 
where pendapatan=(select max(pendapatan)from film);

--6
select * from film
select 
nm_film as "Nama Film",
pendapatan as"Pendapatan"
from film
where pendapatan =(select min(pendapatan)from film)
--7tampil pendapatan rata2
select * from film 
select 
round(avg(pendapatan)) as "Pendapatan Rata-rata" 
from film;

--8 tampil rata nominasi keseluruhan
select
round(avg(nominasi)) as "Nominasi"
from film;

--9 nama film huruf depan p
select * from film
select nm_film from film where nm_film like 'P%';

--10 nama film huruf terakir s
select nm_film from film where nm_film like '%S';

--11 nama film yg mengandung d
select nm_film from film where nm_film like '%D%';
select * from film;
--12 nama film pendapatan terkecil yg mengandung huruf b
select * from film;
select
nm_film as "Nama Film",
pendapatan
from film
where nm_film ilike '%V%'
AND 
pendapatan = (select min(pendapatan)from film where nm_film ilike '%v%');


--13 nama film pendapatan terkecil yg mengandung huruf d
select
nm_film,
pendapatan
from film
where nm_film ilike '%d%' 
AND pendapatan = (select max(pendapatan)from film where nm_film ilike '%d%');


create table kota(
  id integer primary key,
	nama text,
	id_provinsi integer
);

create table provinsi(
id integer primary key,
	nama text
);

select * from kota;
insert into kota(id, nama, id_provinsi)
values (1, 'Jakarta', 1),
       (2, 'Bandung', 2),
	   (3, 'Sumedang', 2),
	   (4, 'Makasar', 4),
	   (5, 'Surabaya', 5),
	   (6, 'Medan', 6);

select * from provinsi;
insert into provinsi(id, nama)
values(1, 'DKI Jakarta'),
      (2, 'Jawa Barat'),
	  (3, 'Papua Barat'),
	  (4, 'Sulawesi Selatan'),
	  (5, 'Jawa Timur');
	  
-- join/inner join
select 
kota.nama as "Kota",
provinsi.nama as "Provinsi"
from kota
inner join provinsi
on kota.id_provinsi = provinsi.id; -- penyambung/pengunci

select *
from kota
inner join provinsi
on kota.id_provinsi = provinsi.id; -- penyambung/pengunci


--Alias nama table
select 
k.nama as "Kota",
p.nama as "Provinsi"
from kota k
inner join provinsi p
on k.id_provinsi = p.id; -- penyambung/pengunci


-- Left join
-- yg dieksekusi yg ditulis programnya dulu(Kiri)
select
k.nama as "Kota",
p.nama as "Provinsi"
from kota k left join provinsi p
on k.id_provinsi=p.id;


-- Right join
select
k.nama as "Kota",
p.nama as "Provinsi"
from kota k               
right join provinsi p
on k.id_provinsi=p.id;


-- Full join/ full outer join
select
k.nama as "Kota",
p.nama as "Provinsi"
from kota k               
full join provinsi p
on k.id_provinsi=p.id;











